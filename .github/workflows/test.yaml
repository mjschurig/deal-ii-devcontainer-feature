name: "CI - Test Features"
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  test-autogenerated:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        features: 
          - deal-ii
        baseImage:
          - mcr.microsoft.com/devcontainers/base:ubuntu-20.04
          - mcr.microsoft.com/devcontainers/base:ubuntu-22.04
          - mcr.microsoft.com/devcontainers/base:debian-11
          - mcr.microsoft.com/devcontainers/base:debian-12
          - ubuntu:focal
          - ubuntu:jammy
          - debian:bullseye
          - debian:bookworm
    steps:
      - uses: actions/checkout@v3

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' against '${{ matrix.baseImage }}'"
        run: |
          devcontainer features test \
            --skip-scenarios \
            --features ${{ matrix.features }} \
            --base-image ${{ matrix.baseImage }} .

  test-scenarios:
    runs-on: ubuntu-latest
    continue-on-error: true
    timeout-minutes: 90
    strategy:
      matrix:
        scenario: 
          - idempotency
          - mpi-enabled
          - trilinos-enabled
        baseImage:
          - mcr.microsoft.com/devcontainers/base:ubuntu-20.04
          - mcr.microsoft.com/devcontainers/base:ubuntu-22.04
          - mcr.microsoft.com/devcontainers/base:debian-11
          - mcr.microsoft.com/devcontainers/base:debian-12
    steps:
      - uses: actions/checkout@v3

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Testing scenario '${{ matrix.scenario }}' on '${{ matrix.baseImage }}'"
        run: |
          # Temporarily modify the scenario to use the matrix base image
          jq --arg img "${{ matrix.baseImage }}" \
             --arg scenario "${{ matrix.scenario }}" \
             '.[$scenario].image = $img' \
             test/deal-ii/scenarios.json > test/deal-ii/scenarios.json.tmp
          mv test/deal-ii/scenarios.json.tmp test/deal-ii/scenarios.json
          
          # Run the specific scenario test
          devcontainer features test \
            --features deal-ii \
            --skip-autogenerated \
            --filter "${{ matrix.scenario }}" .

  test-global:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Testing global scenarios"
        run: devcontainer features test --global-scenarios-only . 